import React, { useState } from 'react';
import './App.css';

function ExpenseTracker() {
  const [expenses, setExpenses] = useState([]);
  const [description, setDescription] = useState('');
  const [amount, setAmount] = useState('');
  const [category, setCategory] = useState('');
  const [categories, setCategories] = useState([]);
  const [summary, setSummary] = useState({});

  const handleDescriptionChange = (event) => {
    setDescription(event.target.value);
  };

  const handleAmountChange = (event) => {
    setAmount(event.target.value);
  };

  const handleCategoryChange = (event) => {
    setCategory(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    if (description && amount && category) {
      const newExpense = {
        id: Date.now(),
        description,
        amount: parseFloat(amount),
        category
      };
      setExpenses([...expenses, newExpense]);
      setDescription('');
      setAmount('');
      setCategory('');
    }
  };

  const handleCategorySummary = () => {
    const summaryData = {};
    expenses.forEach(expense => {
      if (!summaryData[expense.category]) {
        summaryData[expense.category] = expense.amount;
      } else {
        summaryData[expense.category] += expense.amount;
      }
    });
    setSummary(summaryData);
    setCategories(Object.keys(summaryData));
  };

  return (
    <div className="expense-tracker">
      <h1>Expense Tracker</h1>
      <form onSubmit={handleSubmit}>
        <input
          type="number"
          value={amount}
          onChange={handleAmountChange}
          placeholder="Enter Amount"
        />
        <input
          type="text"
          value={category}
          onChange={handleCategoryChange}
          placeholder="Enter Category"
        />
        <button type="submit">Add Expense</button>
      </form>
      <div className="expenses-list">
        <h2>Expenses List</h2>
        {expenses.length === 0 ? <p>No expenses yet.</p> : null}
        <ul>
          {expenses.map(expense => (
            <li key={expense.id}>
              <span>{expense.description}</span>
              <span>Rs.{expense.amount}</span>
              <span>{expense.category}</span>
            </li>
          ))}
        </ul>
      </div>
      <button onClick={handleCategorySummary}>View Summary</button>
      <div className="summary">
        <h2>Summary</h2>
        <ul>
          {categories.map(category => (
            <li key={category}>
              <span>{category}</span>
              <span>Rs.{summary[category]}</span>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}

export default ExpenseTracker;

#app.css

.expense-tracker {
  max-width: 500px;
  margin: 20px auto;
  padding: 20px;
  background-color: #f0f0f0;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  text-align: center;
}

h1 {
  margin-bottom: 20px;
}

form input[type="text"],
form input[type="number"],
form button {
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  border: none;
  border-radius: 4px;
}

button {
  background-color: #007bff;
  color: #fff;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

.expenses-list {
  margin-top: 20px;
}

.expenses-list h2 {
  margin-bottom: 10px;
}

.expenses-list ul {
  list-style-type: none;
  padding: 0;
}

.expenses-list li {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #e9e9e9;
  border-radius: 4px;
}

.summary {
  margin-top: 20px;
}

.summary h2 {
  margin-bottom: 10px;
}

.summary ul {
  list-style-type: none;
  padding: 0;
}

.summary li {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
  padding: 10px;
  background-color: #e9e9e9;
  border-radius: 4px;
}
